{"version":3,"sources":["images/hats1.png","images/hats2.png","images/hats3.png","components/Product.js","components/Cart.js","components/product_data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Hat","hat","products","myChoice","cartContent","setCartContent","showtask","setShowtask","cartState","setCartState","correctPrice","price","toFixed","className","src","picture","alt","desc","onClick","cartCopy","cartid","amount","total","concat","newArr","alert","Order","order","console","log","name","email","phone","address","sum","CurrentItems","cc","Orders","orders","undefined","map","key","id","CurrentContent","addAmount","deductAmount","totalPrice2","OrderForm","summa","setOrders","setShowtask3","setShowtask4","useState","newOrder","setNewOrder","changeHandler","e","f","tempOrder","target","value","onSubmit","preventDefault","uniqueId","Math","round","random","orderedProducts","onChange","type","maxlength","Cart","showtask2","setShowtask2","tempContents","cart","totalPrice","length","hats","reduce","a","b","c","hats1","hats2","hats3","App","showtask3","showtask4","setMyChoice","items","setItems","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,sJCuC5BC,G,KApCH,SAAC,GAUN,IATLC,EASI,EATJA,IACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAC,EAKI,EALJA,eACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,aAgBMC,EAAeT,EAAIU,MAAMC,QAAQ,GACvC,OACE,yBAAKC,UAAU,QACb,yBAAKC,IAAKb,EAAIc,QAASF,UAAU,MAAMG,IAAKf,EAAIe,MAChD,2BAAIf,EAAIgB,MACR,qCAAWP,EAAX,WACA,4BAAQQ,QAnBQ,WAClB,IAA4B,IAAxBV,EAAUL,GAAqB,EAChB,IAAbG,GAAoBC,GAAaD,GACrC,IAAIa,EAAQ,2BAAQjB,EAASC,IAAjB,IAA4BiB,OAAQjB,EAAW,EAAGkB,OAAQ,EAAGC,MAAQpB,EAASC,GAAUQ,OAAST,EAASC,GAAUkB,OAAS,KACzIhB,EAAeD,EAAYmB,OAAOJ,IAClC,IAAIK,EAAM,eAAQhB,GAClBgB,EAAOrB,IAAY,EACnBM,EAAae,QACoB,IAAxBhB,EAAUL,IACnBsB,MAAM,8BAUN,wB,QC/BAC,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEf,OADAC,QAAQC,IAAIF,GAEV,oCACE,oCAAUA,EAAMG,MAChB,gDAAgBH,EAAMI,OACtB,uCAAaJ,EAAMK,OACnB,sCAAYL,EAAMM,SAClB,2BAAG,gDAAmBN,EAAMO,IAAzB,YALL,YAMW,+BAKTC,EAAe,SAAC,GAAY,IAAVC,EAAS,EAATA,GAEtB,OACE,oCACKA,EAAGpB,IADR,2BAEYoB,EAAGf,OAFf,IAEuB,+BAMrBgB,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQlC,EAAkB,EAAlBA,YACxB,YAAemC,IAAXD,EAEA,oCACE,mDACCA,EAAOE,KAAI,SAAAb,GAAK,OAAI,kBAAC,EAAD,CAAOA,MAAOA,EAAOc,IAAKd,EAAMe,QAElDtC,EAAYoC,KAAI,SAAAJ,GAAE,OAAI,kBAAC,EAAD,CAAcA,GAAIA,EAAIK,IAAKL,EAAGM,SAK3D,6BACE,6CAMAC,EAAiB,SAAC,GAAqC,IAAnCP,EAAkC,EAAlCA,GAAIQ,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAEjCnC,EAAe0B,EAAGzB,MAAMC,QAAQ,GAChCkC,GAAepC,EAAe0B,EAAGf,QAAQT,QAAQ,GAEvD,OACE,oCACE,sCACWwB,EAAGpB,IADd,2BAEUoB,EAAGf,OACX,6BAHF,UAIUX,EAJV,gCAKkBoC,EALlB,WAOA,4BAAQ5B,QAAS,kBAAM0B,EAAUR,EAAGhB,UAApC,qBARF,SASQ,4BAAQF,QAAS,kBAAM2B,EAAaT,EAAGhB,UAAvC,kBAKN2B,EAAY,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,MAAO5C,EAAiE,EAAjEA,YAAakC,EAAoD,EAApDA,OAAQW,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAAmB,EAC3DC,mBAAS,CAAEtB,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIC,QAAS,KADO,mBACpFoB,EADoF,KAC1EC,EAD0E,KAGrFC,EAAgB,SAACC,EAAGC,GACxB,IAAMC,EAAS,eAAQL,GACvBK,EAAUD,GAAKD,EAAEG,OAAOC,MACxBN,EAAYI,IAgBd,OACE,oCAEE,0BAAMG,SAhBY,SAACL,GAGrB,GAFAA,EAAEM,iBAEoB,KAAlBT,EAASvB,MAAkC,KAAnBuB,EAAStB,OAAmC,KAAnBsB,EAASrB,OAAqC,KAArBqB,EAASpB,QAAgB,CACrG,IAAM8B,EAAWC,KAAKC,MAAuC,KAAjCD,KAAKE,OAAO,OACxCjB,EAAUX,EAAOf,OAAP,2BAAmB8B,GAAnB,IAA6BnB,IAAKc,EAAON,GAAIqB,EAAUI,gBAAgB,YAAK/D,OACtF8C,GAAa,GACbC,GAAa,QAEbvB,QAAQC,IAAI,iBAOZ,QACO,6BACL,2BAAOuC,SAAU,SAAAZ,GAAC,OAAID,EAAcC,EAAG,SAASI,MAAOP,EAASvB,KAAMuC,KAAK,OAAOC,UAAU,OAC5F,6BAHF,oBAKa,6BACX,2BAAOF,SAAU,SAAAZ,GAAC,OAAID,EAAcC,EAAG,UAAUI,MAAOP,EAAStB,MAAOsC,KAAK,OAAOC,UAAU,OAC9F,6BAPF,WASU,6BACR,2BAAOF,SAAU,SAAAZ,GAAC,OAAID,EAAcC,EAAG,UAAUI,MAAOP,EAASrB,MAAOqC,KAAK,OAAOC,UAAU,OAC9F,6BAXF,UAaS,6BAAS,2BAAOF,SAAU,SAAAZ,GAAC,OAAID,EAAcC,EAAG,YAAYI,MAAOP,EAASpB,QAASoC,KAAK,OAAOC,UAAU,OAClH,6BAAM,6BAEN,2BAAOD,KAAK,cAOdE,EAAO,SAAC,GAAkJ,IAAhJjE,EAA+I,EAA/IA,SAAUC,EAAqI,EAArIA,YAAaiE,EAAwH,EAAxHA,UAAWC,EAA6G,EAA7GA,aAAcvB,EAA+F,EAA/FA,aAAcC,EAAiF,EAAjFA,aAAc/C,EAAmE,EAAnEA,YAAaC,EAAsD,EAAtDA,eAAgBI,EAAsC,EAAtCA,aAAc6B,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,UAEvIL,EAAY,SAACF,GACjB,IAAMgC,EAAetE,EAAYoC,KAAI,SAAAmC,GACnC,OAAIA,EAAKjC,KAAOA,EACG,2BAAQiC,GAAR,IAActD,OAASsD,EAAKtD,OAAS,EAAIC,OAASqD,EAAKtD,OAAS,GAAKsD,EAAKhE,QAGpFgE,KAGXtE,EAAeqE,IAGX7B,EAAe,SAACH,GACpB,IAAMgC,EAAetE,EAAYoC,KAAI,SAAAmC,GACnC,OAAIA,EAAKjC,KAAOA,GAAMiC,EAAKtD,OAAS,EACjB,2BAAQsD,GAAR,IAActD,OAASsD,EAAKtD,OAAS,EAAIC,OAASqD,EAAKtD,OAAS,GAAKsD,EAAKhE,QAGpFgE,KAGXtE,EAAeqE,IAGXE,EAAa,WACjB,IAAItD,EAAQ,EACe,IAAvBlB,EAAYyE,SAEdvD,EADmBlB,EAAYoC,KAAI,SAAAsC,GAAI,OAAIA,EAAKxD,SAC7ByD,QAAO,SAACC,EAAGC,EAAGC,GAAP,OAAaF,EAAIC,EAAIC,KAAGtE,QAAQ,IAE5D,OAAOU,GAGL0B,EAAQ4B,IACZ,OACE,oCACE,yBAAK/D,UAAU,QACb,2BAAG,oDAA0B+D,IAA1B,YACH,4BAAQ1D,QAAS,WACfX,GAAaD,GACbD,EAAe,IACfI,EAAa,EAAC,GAAO,GAAO,MAH9B,yBAFF,SAOM,4BAAQS,QAAS,WACnBuD,GAAcD,KADZ,cAGHpE,EAAYoC,KAAI,SAAAJ,GAAE,OAAI,kBAAC,EAAD,CAAgBA,GAAIA,EAAIK,IAAKL,EAAGM,GAAIE,UAAWA,EAAWC,aAAcA,QAEjG,6BACC2B,GACC,yBAAK3D,UAAU,QACb,6BAASA,UAAU,SACjB,4CACGT,EAAYoC,KAAI,SAAAJ,GAAE,OAAI,kBAAC,EAAD,CAAcA,GAAIA,EAAIK,IAAKL,EAAGM,QACvD,2BAAG,0CAAgBkC,IAAhB,YACH,kBAAC,EAAD,CAAW5B,MAAOA,EAAO5C,YAAaA,EAAakC,OAAQA,EAAQW,UAAWA,EAAWC,aAAcA,EAAcC,aAAcA,Q,iDCxIhIjD,EAFA,CA9BA,CACbwC,GAAI,EACJ3B,QAASoE,IACTnE,IAAK,UACLC,KAAM,4CACNI,OAAQ,EACRV,MAAO,KACPW,MAAO,GAGM,CACboB,GAAI,EACJ3B,QAASqE,IACTpE,IAAK,UACLC,KAAM,mCACNI,OAAQ,EACRV,MAAO,KACPW,MAAO,GAGM,CACboB,GAAI,EACJ3B,QAASsE,IACTrE,IAAK,UACLC,KAAM,iCACNI,OAAQ,EACRV,MAAO,MACPW,MAAO,ICyDMgE,MAlFf,WAAgB,IAAD,EAEmBlC,oBAAS,GAF5B,mBAEN9C,EAFM,KAEIC,EAFJ,OAGqB6C,oBAAS,GAH9B,mBAGNoB,EAHM,KAGKC,EAHL,OAIqBrB,oBAAS,GAJ9B,mBAINmC,EAJM,KAIKrC,EAJL,OAKqBE,oBAAS,GAL9B,mBAKNoC,EALM,KAKKrC,EALL,OAMmBC,mBAAS,GAN5B,mBAMNjD,EANM,KAMIsF,EANJ,OAOyBrC,mBAAS,IAPlC,mBAONhD,EAPM,KAOOC,EAPP,OAQqB+C,mBAAS,EAAC,GAAO,GAAO,IAR7C,mBAQN5C,EARM,KAQKC,EARL,OASe2C,mBAAS,IATxB,mBASNd,EATM,KASEW,EATF,OAUaG,mBAAS,IAVtB,mBAUNsC,EAVM,KAUCC,EAVD,KAYb,OACE,yBAAK9E,UAAU,OACb,4BAAQA,UAAU,cAChB,2CAEF,yBAAKA,UAAU,QAEb,mDAEC2E,GACC,oCACE,6BAAS3E,UAAU,WAEjB,4BAAQK,QAAS,SAAAsC,GAAC,OAAIiC,EAAY,KAAlC,WACA,4BAAQvE,QAAS,SAAAsC,GAAC,OAAIiC,EAAY,KAAlC,WACA,4BAAQvE,QAAS,SAAAsC,GAAC,OAAIiC,EAAY,KAAlC,WAEA,kBAAC,EAAD,CACExF,IAAKC,EAASC,GACdG,SAAUA,EACVC,YAAaA,EACbL,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,EAChBG,UAAWA,EACXC,aAAcA,KAKlB,6BAASI,UAAU,QACjB,yCACCP,GACC,kBAAC,EAAD,CACEH,SAAUA,EACVG,SAAUA,EACVC,YAAaA,EACbiE,UAAWA,EACXC,aAAcA,EACdc,UAAWA,EACXrC,aAAcA,EACdsC,UAAWA,EACXrC,aAAcA,EACd/C,YAAaA,EACbC,eAAgBA,EAChBI,aAAcA,EACd6B,OAAQA,EACRW,UAAWA,EACXyC,MAAOA,EACPC,SAAUA,MAOpB,6BAAS9E,UAAU,QAChB0E,GACC,6BAAS1E,UAAU,WACjB,kBAAC,EAAD,CAAQyB,OAAQA,EAAQlC,YAAaA,SClE/BwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,c","file":"static/js/main.44001158.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hats1.80990113.png\";","module.exports = __webpack_public_path__ + \"static/media/hats2.02568246.png\";","module.exports = __webpack_public_path__ + \"static/media/hats3.18dfed82.png\";","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Hat = ({\r\n  hat,\r\n  products,\r\n  myChoice,\r\n  cartContent,\r\n  setCartContent,\r\n  showtask,\r\n  setShowtask,\r\n  cartState,\r\n  setCartState\r\n}) => {\r\n\r\n  const handleClick = () => {\r\n    if (cartState[myChoice] === false) {\r\n      if (showtask === false) setShowtask(!showtask);\r\n      let cartCopy = { ...products[myChoice], cartid: myChoice + 1, amount: 1, total: (products[myChoice].price * (products[myChoice].amount + 1)) };\r\n      setCartContent(cartContent.concat(cartCopy));\r\n      let newArr = { ...cartState };\r\n      newArr[myChoice] = true;\r\n      setCartState(newArr);\r\n    } else if (cartState[myChoice] === true) {\r\n      alert(\"Tuote on jo ostoskorissa\");\r\n    }\r\n  }\r\n\r\n  const correctPrice = hat.price.toFixed(2);\r\n  return (\r\n    <div className=\"part\">\r\n      <img src={hat.picture} className=\"pic\" alt={hat.alt}></img>\r\n      <p>{hat.desc}</p>\r\n      <p>Hinta: {correctPrice} €</p>\r\n      <button onClick={handleClick}>Laita ostoskoriin</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hat;","import React, { useState } from 'react';\r\nimport '../App.css';\r\n\r\nconst Order = ({ order }) => {\r\n  console.log(order);\r\n  return (\r\n    <>\r\n      <p>Nimi: {order.name}</p>\r\n      <p>Sähköposti: {order.email}</p>\r\n      <p>Puhelin: {order.phone}</p>\r\n      <p>Osoite: {order.address}</p>\r\n      <p><strong>Yhteensä: {order.sum} €</strong></p>\r\n      Tuotteet:<br></br>\r\n    </>\r\n  );\r\n}\r\n\r\nconst CurrentItems = ({ cc }) => {\r\n\r\n  return (\r\n    <>\r\n        {cc.alt} &ensp;\r\n        Määrä: {cc.amount} <br></br>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst Orders = ({ orders, cartContent }) => {\r\n  if (orders !== undefined) {\r\n    return (\r\n      <>\r\n        <h2>Kiitos tilauksesta!</h2>\r\n        {orders.map(order => <Order order={order} key={order.id} />)}\r\n\r\n          {cartContent.map(cc => <CurrentItems cc={cc} key={cc.id} />)}\r\n\r\n      </>\r\n    )\r\n  } else return (\r\n    <div>\r\n      <p>ei tilauksia</p>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst CurrentContent = ({ cc, addAmount, deductAmount }) => {\r\n\r\n  const correctPrice = cc.price.toFixed(2);\r\n  const totalPrice2 = (correctPrice * cc.amount).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Kuvaus: {cc.alt} &ensp;\r\n        Määrä: {cc.amount}\r\n        <br />\r\n        Hinta: {correctPrice} €&ensp;\r\n        Kokonaishinta: {totalPrice2} €\r\n        </p>\r\n      <button onClick={() => addAmount(cc.cartid)}>Lisää yksi!</button>&ensp;\r\n            <button onClick={() => deductAmount(cc.cartid)}>Poista yksi!</button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst OrderForm = ({ summa, cartContent, orders, setOrders, setShowtask3, setShowtask4 }) => {\r\n  const [newOrder, setNewOrder] = useState({ name: \"\", email: \"\", phone: \"\", address: \"\" });\r\n\r\n  const changeHandler = (e, f) => {\r\n    const tempOrder = { ...newOrder };\r\n    tempOrder[f] = e.target.value;\r\n    setNewOrder(tempOrder);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newOrder.name !== \"\" && newOrder.email !== \"\" && newOrder.phone !== \"\" && newOrder.address !== \"\") {\r\n      const uniqueId = Math.round(Math.random(10000000000000000) * 1000000000000000000);\r\n      setOrders(orders.concat({ ...newOrder, sum: summa, id: uniqueId, orderedProducts: [...cartContent] }));\r\n      setShowtask3(true);\r\n      setShowtask4(false);\r\n    } else {\r\n      console.log(\"anna tiedot\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <form onSubmit={submitHandler}>\r\n        Nimi:<br></br>\r\n        <input onChange={e => changeHandler(e, \"name\")} value={newOrder.name} type=\"text\" maxlength=\"25\" />\r\n        <br />\r\n\r\n        Sähköposti:<br></br>\r\n        <input onChange={e => changeHandler(e, \"email\")} value={newOrder.email} type=\"text\" maxlength=\"25\" /> \r\n        <br />\r\n\r\n        Puhelin:<br></br>\r\n        <input onChange={e => changeHandler(e, \"phone\")} value={newOrder.phone} type=\"text\" maxlength=\"25\" />\r\n        <br />\r\n\r\n        Osoite:<br></br><input onChange={e => changeHandler(e, \"address\")} value={newOrder.address} type=\"text\" maxlength=\"25\" /> \r\n        <br /><br />\r\n\r\n        <input type=\"submit\" />\r\n      </form>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst Cart = ({ showtask, setShowtask, showtask2, setShowtask2, setShowtask3, setShowtask4, cartContent, setCartContent, setCartState, orders, setOrders }) => {\r\n\r\n  const addAmount = (id) => {\r\n    const tempContents = cartContent.map(cart => {\r\n      if (cart.id === id) {\r\n        const tempContent = { ...cart, amount: (cart.amount + 1), total: ((cart.amount + 1) * cart.price) }\r\n        return tempContent;\r\n      } else {\r\n        return cart;\r\n      }\r\n    })\r\n    setCartContent(tempContents);\r\n  }\r\n\r\n  const deductAmount = (id) => {\r\n    const tempContents = cartContent.map(cart => {\r\n      if (cart.id === id && cart.amount > 0) {\r\n        const tempContent = { ...cart, amount: (cart.amount - 1), total: ((cart.amount - 1) * cart.price) }\r\n        return tempContent;\r\n      } else {\r\n        return cart;\r\n      }\r\n    })\r\n    setCartContent(tempContents);\r\n  }\r\n\r\n  const totalPrice = () => {\r\n    let total = 0;\r\n    if (cartContent.length !== 0) {\r\n      const priceArray = cartContent.map(hats => hats.total);\r\n      total = priceArray.reduce((a, b, c) => a + b + c).toFixed(2);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  let summa = totalPrice();\r\n  return (\r\n    <>\r\n      <div className=\"part\">\r\n        <p><strong>Kaikki ostokset: {totalPrice()} €</strong></p>\r\n        <button onClick={() => {\r\n          setShowtask(!showtask);\r\n          setCartContent([]);\r\n          setCartState([false, false, false]);\r\n        }}>Tyhjennä ostoskori</button>&ensp;\r\n            <button onClick={() => {\r\n          setShowtask2(!showtask2)\r\n        }}>Tee tilaus</button>\r\n        {cartContent.map(cc => <CurrentContent cc={cc} key={cc.id} addAmount={addAmount} deductAmount={deductAmount} />)}\r\n      </div>\r\n      <br></br>\r\n      {showtask2 &&\r\n        <div className=\"part\">\r\n          <section className=\"order\">\r\n            <h4>Tilauslomake</h4>\r\n              {cartContent.map(cc => <CurrentItems cc={cc} key={cc.id} />)}\r\n            <p><strong>Hinta: {totalPrice()} €</strong></p>\r\n            <OrderForm summa={summa} cartContent={cartContent} orders={orders} setOrders={setOrders} setShowtask3={setShowtask3} setShowtask4={setShowtask4} />\r\n          </section>\r\n        </div>\r\n      }\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport { Cart, Orders };","import hats1 from '../images/hats1.png';\r\nimport hats2 from '../images/hats2.png';\r\nimport hats3 from '../images/hats3.png';\r\n\r\nlet product1 = {\r\n  id: 1,\r\n  picture: hats1,\r\n  alt: \"Hattu 1\",\r\n  desc: \"Tredun logo tyylikkäässä hatussa\",\r\n  amount: 0,\r\n  price: 10.90,\r\n  total: 0\r\n};\r\n\r\nlet product2 = {\r\n  id: 2,\r\n  picture: hats2,\r\n  alt: \"Hattu 2\",\r\n  desc: \"Tredun logo muodikkaassa hatussa\",\r\n  amount: 0,\r\n  price: 8.95,\r\n  total: 0\r\n};\r\n\r\nlet product3 = {\r\n  id: 3,\r\n  picture: hats3,\r\n  alt: \"Hattu 3\",\r\n  desc: \"Tredun logo modernissa hatussa\",\r\n  amount: 0,\r\n  price: 14.45,\r\n  total: 0\r\n};\r\n\r\nlet products = [product1, product2, product3];\r\n\r\nexport default products;","import React, { useState } from 'react';\r\nimport Hat from './components/Product';\r\nimport { Cart, Orders } from './components/Cart';\r\nimport products from './components/product_data';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const [showtask, setShowtask] = useState(false);\r\n  const [showtask2, setShowtask2] = useState(false);\r\n  const [showtask3, setShowtask3] = useState(false);\r\n  const [showtask4, setShowtask4] = useState(true);\r\n  const [myChoice, setMyChoice] = useState(0);\r\n  const [cartContent, setCartContent] = useState([]);\r\n  const [cartState, setCartState] = useState([false, false, false]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Fanikauppa</h1>\r\n      </header>\r\n      <div className=\"main\">\r\n\r\n        <h2>Tervetuloa Kauppaan</h2>\r\n\r\n        {showtask4 &&\r\n          <>\r\n            <section className=\"product\">\r\n\r\n              <button onClick={e => setMyChoice(0)}>Hattu 1</button>\r\n              <button onClick={e => setMyChoice(1)}>Hattu 2</button>\r\n              <button onClick={e => setMyChoice(2)}>Hattu 3</button>\r\n\r\n              <Hat\r\n                hat={products[myChoice]}\r\n                showtask={showtask}\r\n                setShowtask={setShowtask}\r\n                products={products}\r\n                myChoice={myChoice}\r\n                cartContent={cartContent}\r\n                setCartContent={setCartContent}\r\n                cartState={cartState}\r\n                setCartState={setCartState}\r\n              />\r\n\r\n            </section>\r\n\r\n            <section className=\"cart\">\r\n              <h3>OSTOSKORI</h3>\r\n              {showtask &&\r\n                <Cart\r\n                  myChoice={myChoice}\r\n                  showtask={showtask}\r\n                  setShowtask={setShowtask}\r\n                  showtask2={showtask2}\r\n                  setShowtask2={setShowtask2}\r\n                  showtask3={showtask3}\r\n                  setShowtask3={setShowtask3}\r\n                  showtask4={showtask4}\r\n                  setShowtask4={setShowtask4}\r\n                  cartContent={cartContent}\r\n                  setCartContent={setCartContent}\r\n                  setCartState={setCartState}\r\n                  orders={orders}\r\n                  setOrders={setOrders}\r\n                  items={items}\r\n                  setItems={setItems}\r\n                />\r\n              }\r\n            </section>\r\n          </>\r\n        }\r\n\r\n        <section className=\"cart\">\r\n          {showtask3 &&\r\n            <section className=\"ordered\">\r\n              <Orders orders={orders} cartContent={cartContent} />\r\n            </section>\r\n          }\r\n        </section>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}